streamlit==1.27.2
streamlit-folium==0.15.0
geopandas==0.14.0
pandas==2.1.1
leafmap==0.27.1
import streamlit as st
import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt
import leafmap.foliumap as leaf

url = 'https://raw.github.com/ssujit/move_sustainable/main/data/'

wkam = 'wkamo_hdn.gpkg'
wkpm = 'wkpmo_hdn.gpkg'
satam = 'satamo_hdn.gpkg'
satpm = 'satpmo_hdn.gpkg'
sunam = 'sunamo_hdn.gpkg'
sunpm = 'sunamo_hdn.gpkg'
ct = 'city_monitor.gpkg'
cen = 'ct_centroids.gpkg'
stat = 'hilden_stat.csv'
morning = 'morning_time.csv'
noon = 'noon_time.csv'


wk_am = gpd.read_file(f'{url}{wkam}')
wk_pm = gpd.read_file(f'{url}{wkpm}')
sat_am = gpd.read_file(f'{url}{satam}')
sat_pm = gpd.read_file(f'{url}{satpm}')
sun_am = gpd.read_file(f'{url}{sunam}')
sun_pm = gpd.read_file(f'{url}{sunpm}')
ct_cen = gpd.read_file(f'{url}{cen}')
ct_boundary = gpd.read_file(f'{url}{ct}')
stat_df = pd.read_csv(f'{url}{stat}')
morning_df = pd.read_csv(f'{url}{morning}')
noon_df = pd.read_csv(f'{url}{noon}')


# Page functions
def page_about():
    st.title('Home')
    st.write("Welcome to Home Page!")
    st.markdown('<style>div.block-container{padding-top:1rem;}</style>',unsafe_allow_html=True)
    with st.expander("About"):
        st.write(
            """

             This is where we will describe the purpose of the dashboard
            """
        )
    st.sidebar.write("Write the relevant text about what this page is for")
    # Add more content for the home page as needed

def data_explorer():
    st.title('Data Explorer')
    st.markdown('<style>div.block-container{padding-top:1rem;}</style>',unsafe_allow_html=True)
    st.sidebar.write("Write the relevant text about what this page is for")
    st.write("This is where you can learn more about the Mobility Explorer.")
    # Add more content for the about page as needed
    cities = ct_boundary.city.values
    city = st.sidebar.selectbox('Select city', cities)
    check = st.sidebar.checkbox(f'check {city} city', key=f'city_{city}')
    
    m = leaf.Map(
        layers_control=True,
        draw_control=False,
        measure_control=False,
        fullscreen_control=False,
        )
    m.add_basemap('CartoDB.DarkMatter')
    m.add_gdf(
        gdf=wk_am,
        zoom_to_layer=False,
        layer_name='sat_am',
        info_mode='on_click',
        style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
    m.add_gdf(
        gdf=wk_pm,
        zoom_to_layer=False,
        layer_name='sat_am',
        info_mode='on_click',
        style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
    m.add_gdf(
        gdf=sat_am,
        zoom_to_layer=False,
        layer_name='sat_am',
        info_mode='on_click',
        style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
    m.add_gdf(
        gdf=sat_pm,
        zoom_to_layer=False,
        layer_name='sat_am',
        info_mode='on_click',
        style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
    m.add_gdf(
        gdf=sun_am,
        zoom_to_layer=False,
        layer_name='sat_am',
        info_mode='on_click',
        style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
    m.add_gdf(
        gdf=sun_pm,
        zoom_to_layer=False,
        layer_name='sat_am',
        info_mode='on_click',
        style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
    if city:
        m.add_gdf(
            gdf=ct_boundary,
            zoom_to_layer=False,
            layer_name='cities',
            info_mode=None,
            style={'color': '#225ea8', 'weight': 1.5},
        )

    selected_gdf = ct_boundary[ct_boundary['city'] == city]

    m.add_gdf(
        gdf=selected_gdf,
        layer_name='selected',
        zoom_to_layer=True,
        info_mode=None,
        style={'color': 'yellow', 'fill': None, 'weight': 2}
     )
    m.to_streamlit(600, 600)


def page_compare():
    st.title('Comparison')
    
    #st.set_page_config(page_title='Dashboard', page_icon=":de:", layout='wide')
    st.markdown('<style>div.block-container{padding-top:1rem;}</style>',unsafe_allow_html=True)

    st.header("Compare between morning and afternoon")
    st.sidebar.write("Write the relevant text about what this page is for")
    col1, col2 = st.columns((2))
    #m1 = None  # Define m1 outside the col1 block
    #m2 = None  # Define m2 outside the col2 block
    
    with col1:
        morning = morning_df.time.values
        time_morning = st.selectbox('Morning', morning)
    with col2:
        noon = noon_df.time.values
        time_noon = st.selectbox('Afternoon', noon)
        
    with col1:
        cities = ct_boundary.city.values
        city = st.sidebar.selectbox('Select city 1', cities)
        #overlay1 = st.sidebar.checkbox('Overlay city')
        city_1 = st.sidebar.checkbox(f'check {city} city', key=f'city_1_{city}')
        #city_stat = stat_df[stat_df['city'] == city]
    
    with col2:
        cities = ct_boundary.city.values
        city = st.sidebar.selectbox('Select city 2', cities)
        city_2 = st.sidebar.checkbox(f'check {city} city', key=f'city_2_{city}')
        #overlay2 = st.sidebar.checkbox('Overlay city')
        #city_stat = stat_df[stat_df['city'] == city]
    
    with col1:
        # First Map
        st.subheader('During Morning')
        m1 = leaf.Map(
            layers_control=True,
            draw_control=False,
            measure_control=False,
            fullscreen_control=False,
        )
        m1.add_basemap('CartoDB.DarkMatter')
        # adding wk_am layer
        m1.add_gdf(
            gdf= wk_am,
            zoom_to_layer=False,
            layer_name='wk_am',
            info_mode='on_click',
            style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
        # adding sat_am layer
        m1.add_gdf(
            gdf= sat_am,
            zoom_to_layer=False,
            layer_name='sat_am',
            info_mode='on_click',
            style={'color': '#759242', 'fillOpacity': 0.3, 'weight': 0.8},
        )
        # adding sun_am layer
        m1.add_gdf(
            gdf= sun_am,
            zoom_to_layer=False,
            layer_name='sun_am',
            info_mode='on_click',
            style={'color': '#A59CD3', 'fillOpacity': 0.3, 'weight': 0.8},
        )

        if city_1:
            m1.add_gdf(
                gdf=ct_boundary,
                zoom_to_layer=False,
                layer_name='cities',
                info_mode=None,
                style={'color': '#225ea8', 'weight': 1.5},
            )

        selected_gdf = ct_boundary[ct_boundary['city'] == city]

        m1.add_gdf(
            gdf=selected_gdf,
            layer_name='selected',
            zoom_to_layer=True,
            info_mode=None,
            style={'color': 'yellow', 'fill': None, 'weight': 2}
         )
        m1.to_streamlit(450, 400)

    with col2:
        # Second Map
        st.subheader('During Aternoon')
        m2 = leaf.Map(
            layers_control=True,
            draw_control=False,
            measure_control=False,
            fullscreen_control=False,
        )
        m2.add_basemap('CartoDB.DarkMatter')
        # adding wk_pm layer
        m2.add_gdf(
            gdf= wk_pm,
            zoom_to_layer=False,
            layer_name='wk_pm',
            info_mode='on_click',
            style={'color': '#7fcdbb', 'fillOpacity': 0.3, 'weight': 0.8},
        )
        # adding sat_pm layer
        m2.add_gdf(
            gdf= sat_pm,
            zoom_to_layer=False,
            layer_name='sat_pm',
            info_mode='on_click',
            style={'color': '#759242', 'fillOpacity': 0.3, 'weight': 0.8},
        )
        # adding sun_pm layer
        m2.add_gdf(
            gdf= sun_pm,
            zoom_to_layer=False,
            layer_name='sun_pm',
            info_mode='on_click',
            style={'color': '#A59CD3', 'fillOpacity': 0.3, 'weight': 0.8},
        )

        if city_2:
            m2.add_gdf(
                gdf=ct_boundary,
                zoom_to_layer=False,
                layer_name='cities',
                info_mode=None,
                style={'color': '#225ea8', 'weight': 1.5},
            )

        selected_gdf = ct_boundary[ct_boundary['city'] == city]

        m2.add_gdf(
            gdf=selected_gdf,
            layer_name='selected',
            zoom_to_layer=True,
            info_mode=None,
            style={'color': 'yellow', 'fill': None, 'weight': 2}
         )
        m2.to_streamlit(450, 400)
        
        with col1:
            fig, ax = plt.subplots()
            stat_df.plot(kind='bar', ax=ax, color=['blue', 'red', 'green'],
                ylabel='pti', xlabel='stattistics')
            ax.get_xaxis().set_ticklabels([])
            stats = st.pyplot(fig)

        with col2:
            fig, ax = plt.subplots()
            stat_df.plot(kind='bar', ax=ax, color=['blue', 'red', 'green'],
                ylabel='pti', xlabel='stattistics')
            ax.get_xaxis().set_ticklabels([])
            stats = st.pyplot(fig)
#m1_streamlit = m1.to_streamlit(480, 500)
#m2_streamlit = m2.to_streamlit(480, 500)
        
def main():
    st.set_page_config(page_title='Mobility Explorer', page_icon=":de:", layout='wide')

    st.sidebar.title('Navigation')
    page = st.sidebar.radio("Go to", ("About", "Data Explorer", "Compare"))

    if page == "About":
        page_about()
    elif page == "Data Explorer":
        data_explorer()
    elif page == "Compare":
        page_compare()

if __name__ == "__main__":
    main()

    
    
